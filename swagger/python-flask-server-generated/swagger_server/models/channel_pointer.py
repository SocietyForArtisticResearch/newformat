# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ChannelPointer(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, channel: float=None, total_channels: int=None):  # noqa: E501
        """ChannelPointer - a model defined in Swagger

        :param channel: The channel of this ChannelPointer.  # noqa: E501
        :type channel: float
        :param total_channels: The total_channels of this ChannelPointer.  # noqa: E501
        :type total_channels: int
        """
        self.swagger_types = {
            'channel': float,
            'total_channels': int
        }

        self.attribute_map = {
            'channel': 'channel',
            'total_channels': 'totalChannels'
        }
        self._channel = channel
        self._total_channels = total_channels

    @classmethod
    def from_dict(cls, dikt) -> 'ChannelPointer':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ChannelPointer of this ChannelPointer.  # noqa: E501
        :rtype: ChannelPointer
        """
        return util.deserialize_model(dikt, cls)

    @property
    def channel(self) -> float:
        """Gets the channel of this ChannelPointer.


        :return: The channel of this ChannelPointer.
        :rtype: float
        """
        return self._channel

    @channel.setter
    def channel(self, channel: float):
        """Sets the channel of this ChannelPointer.


        :param channel: The channel of this ChannelPointer.
        :type channel: float
        """
        if channel is None:
            raise ValueError("Invalid value for `channel`, must not be `None`")  # noqa: E501

        self._channel = channel

    @property
    def total_channels(self) -> int:
        """Gets the total_channels of this ChannelPointer.


        :return: The total_channels of this ChannelPointer.
        :rtype: int
        """
        return self._total_channels

    @total_channels.setter
    def total_channels(self, total_channels: int):
        """Sets the total_channels of this ChannelPointer.


        :param total_channels: The total_channels of this ChannelPointer.
        :type total_channels: int
        """
        if total_channels is None:
            raise ValueError("Invalid value for `total_channels`, must not be `None`")  # noqa: E501

        self._total_channels = total_channels
