# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.channel_pointer import ChannelPointer  # noqa: F401,E501
from swagger_server.models.counter_pointer import CounterPointer  # noqa: F401,E501
from swagger_server.models.time_pointer import TimePointer  # noqa: F401,E501
from swagger_server.models.two_d_pointer import TwoDPointer  # noqa: F401,E501
from swagger_server import util


class ObjectPointerPointer(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, time_pointer: TimePointer=None, two_d_pointer: TwoDPointer=None, counter_pointer: CounterPointer=None, channel_pointer: ChannelPointer=None):  # noqa: E501
        """ObjectPointerPointer - a model defined in Swagger

        :param time_pointer: The time_pointer of this ObjectPointerPointer.  # noqa: E501
        :type time_pointer: TimePointer
        :param two_d_pointer: The two_d_pointer of this ObjectPointerPointer.  # noqa: E501
        :type two_d_pointer: TwoDPointer
        :param counter_pointer: The counter_pointer of this ObjectPointerPointer.  # noqa: E501
        :type counter_pointer: CounterPointer
        :param channel_pointer: The channel_pointer of this ObjectPointerPointer.  # noqa: E501
        :type channel_pointer: ChannelPointer
        """
        self.swagger_types = {
            'time_pointer': TimePointer,
            'two_d_pointer': TwoDPointer,
            'counter_pointer': CounterPointer,
            'channel_pointer': ChannelPointer
        }

        self.attribute_map = {
            'time_pointer': 'timePointer',
            'two_d_pointer': 'twoDPointer',
            'counter_pointer': 'counterPointer',
            'channel_pointer': 'channelPointer'
        }
        self._time_pointer = time_pointer
        self._two_d_pointer = two_d_pointer
        self._counter_pointer = counter_pointer
        self._channel_pointer = channel_pointer

    @classmethod
    def from_dict(cls, dikt) -> 'ObjectPointerPointer':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ObjectPointer_pointer of this ObjectPointerPointer.  # noqa: E501
        :rtype: ObjectPointerPointer
        """
        return util.deserialize_model(dikt, cls)

    @property
    def time_pointer(self) -> TimePointer:
        """Gets the time_pointer of this ObjectPointerPointer.


        :return: The time_pointer of this ObjectPointerPointer.
        :rtype: TimePointer
        """
        return self._time_pointer

    @time_pointer.setter
    def time_pointer(self, time_pointer: TimePointer):
        """Sets the time_pointer of this ObjectPointerPointer.


        :param time_pointer: The time_pointer of this ObjectPointerPointer.
        :type time_pointer: TimePointer
        """

        self._time_pointer = time_pointer

    @property
    def two_d_pointer(self) -> TwoDPointer:
        """Gets the two_d_pointer of this ObjectPointerPointer.


        :return: The two_d_pointer of this ObjectPointerPointer.
        :rtype: TwoDPointer
        """
        return self._two_d_pointer

    @two_d_pointer.setter
    def two_d_pointer(self, two_d_pointer: TwoDPointer):
        """Sets the two_d_pointer of this ObjectPointerPointer.


        :param two_d_pointer: The two_d_pointer of this ObjectPointerPointer.
        :type two_d_pointer: TwoDPointer
        """

        self._two_d_pointer = two_d_pointer

    @property
    def counter_pointer(self) -> CounterPointer:
        """Gets the counter_pointer of this ObjectPointerPointer.


        :return: The counter_pointer of this ObjectPointerPointer.
        :rtype: CounterPointer
        """
        return self._counter_pointer

    @counter_pointer.setter
    def counter_pointer(self, counter_pointer: CounterPointer):
        """Sets the counter_pointer of this ObjectPointerPointer.


        :param counter_pointer: The counter_pointer of this ObjectPointerPointer.
        :type counter_pointer: CounterPointer
        """

        self._counter_pointer = counter_pointer

    @property
    def channel_pointer(self) -> ChannelPointer:
        """Gets the channel_pointer of this ObjectPointerPointer.


        :return: The channel_pointer of this ObjectPointerPointer.
        :rtype: ChannelPointer
        """
        return self._channel_pointer

    @channel_pointer.setter
    def channel_pointer(self, channel_pointer: ChannelPointer):
        """Sets the channel_pointer of this ObjectPointerPointer.


        :param channel_pointer: The channel_pointer of this ObjectPointerPointer.
        :type channel_pointer: ChannelPointer
        """

        self._channel_pointer = channel_pointer
