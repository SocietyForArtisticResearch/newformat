# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class OpenVocabularyTerm(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: str=None, term: str=None):  # noqa: E501
        """OpenVocabularyTerm - a model defined in Swagger

        :param id: The id of this OpenVocabularyTerm.  # noqa: E501
        :type id: str
        :param term: The term of this OpenVocabularyTerm.  # noqa: E501
        :type term: str
        """
        self.swagger_types = {
            'id': str,
            'term': str
        }

        self.attribute_map = {
            'id': 'id',
            'term': 'term'
        }
        self._id = id
        self._term = term

    @classmethod
    def from_dict(cls, dikt) -> 'OpenVocabularyTerm':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The OpenVocabularyTerm of this OpenVocabularyTerm.  # noqa: E501
        :rtype: OpenVocabularyTerm
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this OpenVocabularyTerm.


        :return: The id of this OpenVocabularyTerm.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this OpenVocabularyTerm.


        :param id: The id of this OpenVocabularyTerm.
        :type id: str
        """

        self._id = id

    @property
    def term(self) -> str:
        """Gets the term of this OpenVocabularyTerm.

        the keyword, language unspecified  # noqa: E501

        :return: The term of this OpenVocabularyTerm.
        :rtype: str
        """
        return self._term

    @term.setter
    def term(self, term: str):
        """Sets the term of this OpenVocabularyTerm.

        the keyword, language unspecified  # noqa: E501

        :param term: The term of this OpenVocabularyTerm.
        :type term: str
        """
        if term is None:
            raise ValueError("Invalid value for `term`, must not be `None`")  # noqa: E501

        self._term = term
