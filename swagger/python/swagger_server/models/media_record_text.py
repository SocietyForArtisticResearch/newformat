# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class MediaRecordText(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, text_type: str=None, content: str=None):  # noqa: E501
        """MediaRecordText - a model defined in Swagger

        :param text_type: The text_type of this MediaRecordText.  # noqa: E501
        :type text_type: str
        :param content: The content of this MediaRecordText.  # noqa: E501
        :type content: str
        """
        self.swagger_types = {
            'text_type': str,
            'content': str
        }

        self.attribute_map = {
            'text_type': 'textType',
            'content': 'content'
        }
        self._text_type = text_type
        self._content = content

    @classmethod
    def from_dict(cls, dikt) -> 'MediaRecordText':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The MediaRecord_text of this MediaRecordText.  # noqa: E501
        :rtype: MediaRecordText
        """
        return util.deserialize_model(dikt, cls)

    @property
    def text_type(self) -> str:
        """Gets the text_type of this MediaRecordText.


        :return: The text_type of this MediaRecordText.
        :rtype: str
        """
        return self._text_type

    @text_type.setter
    def text_type(self, text_type: str):
        """Sets the text_type of this MediaRecordText.


        :param text_type: The text_type of this MediaRecordText.
        :type text_type: str
        """

        self._text_type = text_type

    @property
    def content(self) -> str:
        """Gets the content of this MediaRecordText.


        :return: The content of this MediaRecordText.
        :rtype: str
        """
        return self._content

    @content.setter
    def content(self, content: str):
        """Sets the content of this MediaRecordText.


        :param content: The content of this MediaRecordText.
        :type content: str
        """

        self._content = content
