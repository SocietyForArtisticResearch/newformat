{-
   Media Repository API
   This is the Research Catalouge Media Repository API

   The version of the OpenAPI document: 1.0.0-oas3
   Contact: support@researchcatalogue.net

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git
   Do not edit this file manually.
-}


module Data.Connection exposing (Connection, decoder, encode, encodeWithTag, toString)

import Data.ObjectPointer as ObjectPointer exposing (ObjectPointer)
import Data.ObjectPointer as ObjectPointer exposing (ObjectPointer)
import Dict exposing (Dict)
import Json.Decode as Decode exposing (Decoder)
import Json.Decode.Pipeline exposing (optional, required)
import Json.Encode as Encode


type alias Connection =
    { id : Maybe (String)
    , subject : ObjectPointer
    , predicate : String
    , object : ObjectPointer
    }


decoder : Decoder Connection
decoder =
    Decode.succeed Connection
        |> optional "id" (Decode.nullable Decode.string) Nothing
        |> required "subject" ObjectPointer.decoder
        |> required "predicate" Decode.string
        |> required "object" ObjectPointer.decoder



encode : Connection -> Encode.Value
encode =
    Encode.object << encodePairs


encodeWithTag : ( String, String ) -> Connection -> Encode.Value
encodeWithTag (tagField, tag) model =
    Encode.object <| encodePairs model ++ [ ( tagField, Encode.string tag ) ]


encodePairs : Connection -> List (String, Encode.Value)
encodePairs model =
    [ ( "id", Maybe.withDefault Encode.null (Maybe.map Encode.string model.id) )
    , ( "subject", ObjectPointer.encode model.subject )
    , ( "predicate", Encode.string model.predicate )
    , ( "object", ObjectPointer.encode model.object )
    ]



toString : Connection -> String
toString =
    Encode.encode 0 << encode




