{-
   Media Repository API
   This is the Research Catalouge Media Repository API

   The version of the OpenAPI document: 1.0.0-oas3
   Contact: support@researchcatalogue.net

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git
   Do not edit this file manually.
-}


module Data.ChannelPointer exposing (ChannelPointer, decoder, encode, encodeWithTag, toString)

import Dict exposing (Dict)
import Json.Decode as Decode exposing (Decoder)
import Json.Decode.Pipeline exposing (optional, required)
import Json.Encode as Encode


type alias ChannelPointer =
    { channel : Float
    , totalChannels : Int
    }


decoder : Decoder ChannelPointer
decoder =
    Decode.succeed ChannelPointer
        |> required "channel" Decode.float
        |> required "totalChannels" Decode.int



encode : ChannelPointer -> Encode.Value
encode =
    Encode.object << encodePairs


encodeWithTag : ( String, String ) -> ChannelPointer -> Encode.Value
encodeWithTag (tagField, tag) model =
    Encode.object <| encodePairs model ++ [ ( tagField, Encode.string tag ) ]


encodePairs : ChannelPointer -> List (String, Encode.Value)
encodePairs model =
    [ ( "channel", Encode.float model.channel )
    , ( "totalChannels", Encode.int model.totalChannels )
    ]



toString : ChannelPointer -> String
toString =
    Encode.encode 0 << encode




