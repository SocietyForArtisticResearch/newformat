{-
   Media Repository API
   This is the Research Catalouge Media Repository API

   The version of the OpenAPI document: 1.0.0-oas3
   Contact: support@researchcatalogue.net

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git
   Do not edit this file manually.
-}


module Data.ShareStatus exposing (ShareStatus, decoder, encode, encodeWithTag, toString)

import Data.ShareStatusRead as ShareStatusRead exposing (ShareStatusRead)
import Data.ShareStatusWrite as ShareStatusWrite exposing (ShareStatusWrite)
import Dict exposing (Dict)
import Json.Decode as Decode exposing (Decoder)
import Json.Decode.Pipeline exposing (optional, required)
import Json.Encode as Encode


{-| Read and write permssions for users that are not the creator
-}
type alias ShareStatus =
    { read : ShareStatusRead
    , write : ShareStatusWrite
    }


decoder : Decoder ShareStatus
decoder =
    Decode.succeed ShareStatus
        |> required "read" ShareStatusRead.decoder
        |> required "write" ShareStatusWrite.decoder



encode : ShareStatus -> Encode.Value
encode =
    Encode.object << encodePairs


encodeWithTag : ( String, String ) -> ShareStatus -> Encode.Value
encodeWithTag (tagField, tag) model =
    Encode.object <| encodePairs model ++ [ ( tagField, Encode.string tag ) ]


encodePairs : ShareStatus -> List (String, Encode.Value)
encodePairs model =
    [ ( "read", ShareStatusRead.encode model.read )
    , ( "write", ShareStatusWrite.encode model.write )
    ]



toString : ShareStatus -> String
toString =
    Encode.encode 0 << encode




