openapi: 3.0.0
info:
  description: This is the Research Catalouge Media Repository API
  version: "1.0.0-oas3"
  title: Media Repository API
  contact:
    email: support@researchcatalogue.net
  license:
    name: GPL-3
    url: 'https://www.gnu.org/licenses/gpl-3.0.en.html'
tags:
  - name: admins
    description: Secured Admin-only calls
  - name: developers
    description: Operations available to regular developers
  - name: users
    description: Operations for the users
paths:
  /media:
    post:
      summary: upload a media file and creating a media record
      operationId: postMedia
      description: >
        Upload a media file, providing the required fields returns the id of the
        media
      responses: 
        '201':
          description: successful creation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaRecord'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MediaRecord'
 
components:
  schemas:
    ObjectPointer:
      type: object
      properties:
        objectType:
          type: string
          enum:
            - mediaRecord
            - exposition
        id:
          type: string
          description: RC id
        pointer:
          oneOf:
            - $ref: '#/components/schemas/TimePointer'
            - $ref: '#/components/schemas/2dPointer'
            - $ref: '#/components/schemas/CounterPointer'
            - $ref: '#/components/schemas/ChannelPointer'
    TimePointer:
      type: object
      properties:
        hours:
          type: integer
        minutes:
          type: integer
        seconds:
          type: integer
        milliseconds:
          type: integer
    2dPointer:
      type: object
      properties:
        unit:
          enum:
            - perc
            - pixel
        x:
          type: number
          format: float
        y:
          type: number
          format: float
    CounterPointer:
      type: object
      properties:
        counterType:
          type: string
          enum:
            - character
            - byte
            - page
    ChannelPointer:
      type: object
      properties:
        channel:
          type: number
          format: float
        totalChannels:
          type: integer
    Connection:
      type: object
      properties:
        subject: 
          $ref: '#/components/schemas/ObjectPointer'
        predicate:
          type: string
          description: predicates can be retrieved from /predicates
        object: 
          $ref: '#/components/schemas/ObjectPointer'
    MediaRecord:
      type: object
      required:
        - title
        - copyright
        - license
      properties:
        id:
          type: string
          description: 'id generated by server, immutable'
          readOnly: true
        file:
          type: string
          format: byte
        title:
          type: string
          example: My Human Title
        copyright:
          type: string
          example: Â© Name Surname
        license:
          type: string
          description: 'RC id of the license, obtained with the call /licenses'
        description:
          type: string
          example: this is a description
        creator:
          type: string
          description: 'RC user id, immutable'
          readOnly: true
        mediaType:
          type: string
          enum:
            - video
            - audio
            - image
            - svg
            - pdf
            - text
          readOnly: true
        parents:
          type: array
          items:
            type: string
          description: media record ids
        keywordsClosed:
          type: array
          items:
            type: string
          description: 'closed vocabolary keywords ids, obtained by /keywords/closed'
        keywordsOpen:
          type: array
          items:
            type: string
          description: 'open vocabolary keywords ids, obtained by /keywords/open'
        tags:
          type: array
          items:
            type: string
          description: >-
            tags by user, non existing tags are added automatically, obtained by
            /tags/#userid
        type:
          description: type obtained from the portfolio API ...
          type: object
          properties:
            id:
              type: string
            metadata:
              type: object
        creationDate:
          type: string
          format: date
          readOnly: true
          description: date when object was created
        modifiedDate:
          type: string
          readOnly: true
          format: date
          description: date when anything in the object was last changed
        connections:
          type: array
          items:
            $ref: '#/components/schemas/Connection'
          description: 'this connects one media record to another, or an exposition.'
