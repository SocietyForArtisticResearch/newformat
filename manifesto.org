
* Exposition Data Structure

An RC exposition consists of /data/ (media/text) that is structured
according to an /ontology/. This structured data object is displayed
using a /renderer/ function. By following linked data and semantic web
standards, this tripartite design creates the basis for a
programmable, sustainable and flexible data architecture that can be
consumed and queried by human and non-human actors.

** Data  :Casper:

Data forms the source material upon which an exposition is built. 

Examples of data types that can be used in expositions:
* video/image/audio files
* text (plain text, Markdown, Microsoft Word, Open/Libre Office, LaTeX, html, pdf)
* external resources identified by a public URL
?? data CSV/json/xml

Once a file is uploaded, it is represented as a /data object/ within the exposition. Data objects can have relationships with each other (see ontology). Each data object has its own license and copyright properties, that can be distinct from the containing exposition. Data within an exposition can be searched and organized in categories/groups. Each object has a DOI and is accessible through a unique URL that displays the object content and its metadata/relationships.


(part of ontology?)
*** Objects can have position properties (next/under/above/within/on top/absolute)
*** Objects can have a property that orders them
*** Objects can have temporalized knowledge
*** Objects can be representations of real-world events/objects/works, give a uri to an art work (idea of "work")

** Ontology  :Luc:
*** (owl, structure and possible relations of exposition, definitions on public uri)
*** Exposition as a queryable object 
*** Database api
*** Validation 
*** ontology also work new "work" feature
*** linked data and vocabularies (linking outside and inside)
** Renderers :Luc:
*** (Html, grid-based, time-based, Pdf, Svg, (and mixtures) etc, presentation, epub, book, verbalization)
*** Renderers for accessibility
*** "Printing" making an networked object autonomous
* Reading process :Luc:
*** Mapping/Navigation
*** Search/exploration within expositions, different types
*** Reading/viewing can be traced, affect the data, taking notes, collective note taking (threads) etc (feedback)

* Writing process :Casper:

The construction of an exposition starts with author collecting media files, references and the writing of text. What follows is the translation of those materials into a digital representation. To assist the translation, the author is able to view and organise the material by creating relationships between the objects. The editor helps with this by allowing authors to view and sort their data in various views: list view, graph view, map view, layout view. The relationships between objects can also be directly edited in the text serialization of the format (which is to be human readable/writable).

The more metadata added by the author about the objects, the richer these views will be in terms of structure. Every action by the author should result in a change in how the views display the data. 

In the end, the author than can choose how much they want to "fix" the final layout structure: either it is completely fixed (the equivalent of the older graphical format), or it is left more free, where the final layout may depend on the view method and actions of the reader.

** Object/Text organization/relation before visual placement
** No waste in actions of user. Recording/effect on meaning

** constructing rhetorical structures from data by hand (editor should assist)
** generating paths, skeleton (diagram language)

** editing content in the exposition format should be transparent enough that it can be done by hand
   
